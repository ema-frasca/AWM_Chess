{"version":3,"sources":["utils.js","Lobby.js","Router.js","Home.js","Account.js","Game.js","index.js","config.js"],"names":["LoadingScreen","props","wsChange","global","ws","setState","loading","state","this","wsOnStateChange","push","divClass","className","src","imgs","alt","React","Component","piecesDict","empty","k","q","b","n","r","p","K","Q","B","N","R","P","PieceImg","sprites","piece","LoadingPage","addWsListener","obj","i","wsOnMessage","has","set","removeWsListener","id","delete","displayTime","minutes","parseInt","toString","padStart","TimerDisplay","tick","time","timer","setInterval","oldProps","updateTime","clearInterval","Math","max","wsSend","LobbyPage","getLeftMatches","content","quick","leftMatches","number","redirectId","redirect","userMatchesLeft","type","f","reqId","to","Lobbies","CapReach","MyLobby","sendRequest","lobbiesRequest","getLobbies","lobbies","length","map","lobby","ShowLobbyLink","key","onClick","getMyLobby","myLobby","options","myLobbyRequest","ShowMyLobby","CreateLobby","toggleEdit","e","onEdit","handleChange","target","name","value","handleSubmit","preventDefault","createMsg","color","colors","times","btnText","timeLabel","opts","onSubmit","onChange","op","unit","ShowLobby","style","display","username","category","timeStr","colorIcon","piecesText","black","white","random","menuLines","text","url","component","Router","MainMenu","path","slice","reverse","line","MenuLine","href","popup","NotificationPop","requestPage","notificationRequest","getNotification","notifications","onNotification","notificationListener","notId","App","HomePage","homeRequest","getHome","list","history","user","match","ShowMatchLink","ended","EndedMatchLine","InMatchLine","vs","turn","Date","getTime","result","AccountPage","getPageInfo","pageRequest","UserEditField","field","btnClass","rank","email","google","GoogleIcon","PasswordChange","width","getError","error","editRequest","getResponse","response","setTimeout","window","location","replace","host","textOld","textNew1","textNew2","pswRequest","old","new1","new2","colSpan","Game","gameRequest","getGame","game","EndedGame","InGame","msgLines","UserResult","whiteTurn","ChessBoard","board","moves","MovesList","pgn","ResultReason","reason","UserLine","UserTime","ChessButtons","claim","handleClick","selected","promotion","move","promotionClick","el","buttonRender","column","row","enabled","disabled","columns","OnPromotion","whiteColor","c","split","offset","blankSpaces","clear","toUpperCase","checked","GamePage","useParams","ReactDOM","render","document","getElementById","static","Map","timeout","changeWS","forEach","buffer","pop","send_buffer","connect","connectInterval","WebSocket","onopen","console","log","clearTimeout","onclose","check","onerror","close","onmessage","message","JSON","parse","data","listener","readyState","CLOSED","send","stringify"],"mappings":"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","file":"static/js/main.0a81599b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass LoadingScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.wsChange();\r\n        global.wsOnStateChange.push(this.wsChange);\r\n    }\r\n\r\n    wsChange = () => {\r\n        if (global.ws)\r\n            this.setState({loading: false})\r\n        else\r\n            this.setState({loading: true})\r\n    }\r\n\r\n    render () {\r\n        let divClass = this.state.loading ? \"loading-socket\" : \"hidden\";\r\n\r\n        return (\r\n            <div className={divClass}>\r\n                <img className=\"loading-icon\" src={global.imgs + \"loading.png\"} alt=\"loading\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst piecesDict = {\r\n    empty: \"empty\",\r\n    k: \"black_king\",\r\n    q: \"black_queen\",\r\n    b: \"black_bishop\",\r\n    n: \"black_knight\",\r\n    r: \"black_rook\",\r\n    p: \"black_pawn\",\r\n    K: \"white_king\",\r\n    Q: \"white_queen\",\r\n    B: \"white_bishop\",\r\n    N: \"white_knight\",\r\n    R: \"white_rook\",\r\n    P: \"white_pawn\",\r\n}\r\n\r\nfunction PieceImg(props) {\r\n    let className = \"chess-piece \";\r\n    if (props.className)\r\n        className += props.className;\r\n    const src = global.sprites + piecesDict[props.piece] + \".png\"\r\n    return <img className={className} alt={props.piece} src={src} ></img>;\r\n}\r\n\r\nfunction LoadingPage(props) {\r\n    return (\r\n        <div className={props.loading ? \"loading-page\" : \"hidden\"}>\r\n            <img className=\"loading-icon\" src={global.imgs + \"loading.png\"} alt=\"loading\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction addWsListener(obj) {\r\n    for (var i=0; global.wsOnMessage.has(i); i++);\r\n    global.wsOnMessage.set(i, obj);\r\n    return i;\r\n}\r\n\r\nfunction removeWsListener(id) {\r\n    global.wsOnMessage.delete(id)\r\n}\r\n\r\nfunction displayTime(minutes) {\r\n    return (parseInt(minutes/60)).toString().padStart(2, \"0\") + \":\" +(minutes%60).toString().padStart(2, \"0\")\r\n}\r\n\r\nclass TimerDisplay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            time : props.time,\r\n        };\r\n\r\n        this.timer = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setInterval(this.tick, 60000);\r\n    }\r\n\r\n    componentDidUpdate(oldProps) {\r\n        if (oldProps.updateTime !== this.props.updateTime)\r\n            this.setState({time: this.props.time});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n        \r\n    }\r\n\r\n    tick = () => {\r\n        const time = this.state.time - 1;\r\n        this.setState({time: time});\r\n    }\r\n\r\n    render() {\r\n        const time = Math.max(0, this.state.time)\r\n        if (time === 0)\r\n            global.wsSend({\"type\": \"times-check\"});\r\n        return <span>{displayTime(time)}</span>;\r\n    }\r\n}\r\n\r\nexport { LoadingScreen, LoadingPage, addWsListener, removeWsListener, PieceImg, displayTime, TimerDisplay };","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { LoadingPage, addWsListener, removeWsListener, PieceImg } from \"./utils\";\r\n\r\n\r\nclass LobbyPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.userMatchesLeft = {type: \"matches-left\", f: this.getLeftMatches, reqId: null};\r\n\r\n        this.state = {\r\n            leftMatches: null,\r\n            redirectId: null,\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.userMatchesLeft.reqId = addWsListener(this.userMatchesLeft);\r\n        global.wsSend({type: this.userMatchesLeft.type, quick: this.props.quick});\r\n    }\r\n\r\n    getLeftMatches = (content) => {\r\n        if (content.quick === this.props.quick)\r\n            this.setState({leftMatches: content.number, redirectId: content.redirect, loading: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        removeWsListener(this.userMatchesLeft.reqId);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading)\r\n            return <LoadingPage loading={true}/>;\r\n        const quick = this.props.quick \r\n        if (quick && this.state.leftMatches === 0 && this.state.redirectId)\r\n            return <Redirect to={\"/game/\" + this.state.redirectId} />\r\n        return (\r\n            <div>\r\n                {this.state.leftMatches ? <Lobbies quick={quick} /> : <CapReach quick={quick} />}\r\n                <hr />\r\n                <MyLobby leftMatches={this.state.leftMatches} quick={quick} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CapReach(props) {\r\n    return <p>You have reached the maximum number of concurrent games (lobbies included) for {props.quick ? \"quick\" : \"slow\"} games</p>\r\n}\r\n\r\nclass Lobbies extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lobbiesRequest = {type: \"matches-lobbies\", f: this.getLobbies, reqId: null};\r\n\r\n        this.state = {\r\n            lobbies: null,\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.lobbiesRequest.reqId = addWsListener(this.lobbiesRequest);\r\n        this.sendRequest();\r\n    }\r\n\r\n    sendRequest = () => {\r\n        global.wsSend({type: this.lobbiesRequest.type, quick: this.props.quick});\r\n    }\r\n\r\n    getLobbies = (content) => {\r\n        if (content.quick === this.props.quick)\r\n            this.setState({lobbies: content.lobbies, loading: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        removeWsListener(this.lobbiesRequest.reqId);\r\n    }\r\n\r\n    render () {\r\n        if (this.state.loading)\r\n            return <LoadingPage loading={true}/>;\r\n\r\n        return (\r\n            <div>\r\n                {this.state.lobbies.length ? null : <p>There are no existing game yet</p>}\r\n                {this.state.lobbies.map((lobby, i) => (\r\n                    <ShowLobbyLink {...lobby} key={i} />\r\n                ))}\r\n                <button onClick={this.sendRequest}>Update</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MyLobby extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.myLobbyRequest = {type: \"matches-mylobby\", f: this.getMyLobby, reqId: null};\r\n\r\n        this.state = {\r\n            myLobby: null,\r\n            options: null,\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.myLobbyRequest.reqId = addWsListener(this.myLobbyRequest);\r\n        global.wsSend({type: this.myLobbyRequest.type, quick: this.props.quick});\r\n    }\r\n\r\n    getMyLobby = (content) => {\r\n        if (content.quick === this.props.quick)\r\n            this.setState({myLobby: content.lobby, options: content.options, loading: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        removeWsListener(this.myLobbyRequest.reqId);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading)\r\n            return <LoadingPage loading={true}/>;\r\n        const myLobby = this.state.myLobby\r\n        if (myLobby === false && this.props.leftMatches === 0)\r\n            return null;\r\n        return (\r\n            <div>\r\n                {myLobby ? \r\n                    <ShowMyLobby {...myLobby} /> \r\n                    : \r\n                    <CreateLobby quick={this.props.quick} options={this.state.options} /> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CreateLobby extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.createMsg = {type: \"matches-create\", quick: props.quick};\r\n\r\n        this.state = {\r\n            onEdit: false,\r\n            color: props.options.colors[0],\r\n            time: props.options.times[0]\r\n        };\r\n    }\r\n\r\n    toggleEdit = (e) => {\r\n        const onEdit = !this.state.onEdit;\r\n        this.setState({onEdit: onEdit});\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        global.wsSend({\r\n            type: this.createMsg.type,\r\n            quick: this.props.quick,\r\n            color: this.state.color,\r\n            time: parseInt(this.state.time)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const btnText = this.state.onEdit ? \"cancel\" : \"Create game\";\r\n        const timeLabel = this.props.quick ? \"Total time per player\" : \"Time per move\";\r\n        const opts = this.props.options\r\n\r\n        return (\r\n            <div>\r\n                <button onClick={this.toggleEdit}>{btnText}</button>\r\n                <form onSubmit={this.handleSubmit} className={this.state.onEdit ? \"\" : \"hidden\"}>\r\n                    <table>\r\n                        <tbody>\r\n                        <tr><td>Chess pieces: </td><td>\r\n                            <select name=\"color\" value={this.state.color} onChange={this.handleChange}>\r\n                                {opts.colors.map((op, i) => <option value={op} key={i} className=\"select-items\" >{op}</option>)}\r\n                            </select></td></tr>\r\n                        <tr><td>{timeLabel}: </td><td>\r\n                            <select name=\"time\" value={this.state.time} onChange={this.handleChange}>\r\n                                {opts.times.map((op, i) => <option value={op} key={i}>{op} {opts.unit}</option>)}\r\n                            </select></td></tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <button type=\"submit\">enter</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ShowLobbyLink(props){\r\n    return(\r\n        <Link to={\"/game/\" + props.id} className=\"lobby-link\">\r\n            <ShowLobby {...props} />\r\n        </Link>\r\n    );\r\n}\r\n\r\nfunction ShowMyLobby(props) {\r\n    return(\r\n        <div style={{display: \"flex\"}}>\r\n            <ShowLobby {...props} />\r\n            <button onClick={(e) => {\r\n                global.wsSend({type: \"matches-delete\", id: props.id, quick: props.quick});\r\n            }}>delete</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ShowLobby(props) {\r\n    let username, category, colorIcon = null, piecesText =  null;\r\n\r\n    if (\"black\" in props) {\r\n        username = props.black.username;\r\n        category = props.black.category;\r\n        colorIcon = <PieceImg piece=\"k\"/>;\r\n    } else {\r\n        username = props.white.username;\r\n        category = props.white.category;\r\n        colorIcon = <PieceImg piece=\"K\"/>;\r\n    }\r\n    \r\n    if (props.random === true) {\r\n        piecesText = \"Chess pieces: random\";\r\n        colorIcon = null;\r\n    }\r\n\r\n    let timeStr;\r\n    if (props.quick)\r\n        timeStr = props.time + \" minutes\";\r\n    else\r\n        timeStr = props.time / 60 + \" hours\";\r\n\r\n    return(\r\n        <div className=\"lobby-box\">\r\n            <p><span>{username}</span><span>({category})</span>{colorIcon}<span>{timeStr}</span></p>\r\n            <h6>{piecesText}</h6>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default LobbyPage;","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport HomePage from \"./Home\";\r\nimport LobbyPage from \"./Lobby\";\r\nimport AccountPage from \"./Account\";\r\nimport GamePage from \"./Game\";\r\n\r\nimport { LoadingScreen, addWsListener, removeWsListener } from \"./utils\";\r\n\r\n\r\nconst menuLines = [\r\n    {text: \"HOME\", url: \"/\", component: <HomePage />},\r\n    {text: \"QUICK GAME\", url: \"/quick\", component: <LobbyPage quick={true} />},\r\n    {text: \"SLOW GAME\", url: \"/slow\", component: <LobbyPage quick={false} />},\r\n    {text: \"ACCOUNT\", url: \"/user\", component: <AccountPage />}\r\n];\r\n\r\nfunction App() {\r\n    return(\r\n        <div>\r\n            <Router />\r\n            <LoadingScreen />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Router() {\r\n    return (\r\n        <BrowserRouter>\r\n            <MainMenu />\r\n\r\n            <div id=\"content\">\r\n                <Switch>\r\n                    <Route path=\"/game/:id\">\r\n                        <GamePage />\r\n                    </Route>\r\n                    {menuLines.slice().reverse().map((line, i) => (\r\n                        <Route path={line.url} key={i}>\r\n                            {line.component}\r\n                        </Route>\r\n                    ))}\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nfunction MainMenu() {\r\n    return (\r\n        <div id=\"main-menu\">\r\n            {menuLines.map((line, i) => (\r\n                <MenuLine {...line} key={i} />\r\n            ))}\r\n            <h3><a href=\"/account/logout\">EXIT</a></h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MenuLine(props) {\r\n    const popup = (props.url === \"/\") ? <NotificationPop /> : null;\r\n\r\n    return (\r\n        <h3>\r\n            <Link to={props.url}>{props.text}{popup}</Link>\r\n        </h3>\r\n    );\r\n}\r\n\r\nclass NotificationPop extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.notificationListener = {type: \"notify\", f: this.onNotification, notId: null}\r\n        this.notificationRequest = {type: \"notifications\", f: this.getNotification, reqId: null};\r\n\r\n        this.state = {\r\n            notifications: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.notificationRequest.reqId = addWsListener(this.notificationRequest);\r\n        this.notificationListener.notId = addWsListener(this.notificationListener);\r\n        this.requestPage();\r\n    }\r\n\r\n    requestPage = () => {\r\n        global.wsSend({type: this.notificationRequest.type});\r\n    }\r\n\r\n    getNotification = (content) => {\r\n        this.setState({notifications: content.number});\r\n    }\r\n\r\n    onNotification = (content) => {\r\n        this.requestPage();\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        removeWsListener(this.notificationRequest.reqId);\r\n        removeWsListener(this.notificationListener.notId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span id=\"notification\">{this.state.notifications ? this.state.notifications : null}</span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingPage, addWsListener, removeWsListener, TimerDisplay } from \"./utils\";\r\n\r\nclass HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.notificationListener = {type: \"notify\", f: this.onNotification, notId: null}\r\n        this.homeRequest = {type: \"home-page\", f: this.getHome, reqId: null};\r\n\r\n        this.state = {\r\n            list: null,\r\n            user: null,\r\n            history: null,\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.homeRequest.reqId = addWsListener(this.homeRequest);\r\n        this.notificationListener.notId = addWsListener(this.notificationListener);\r\n        this.requestPage();\r\n    }\r\n\r\n    requestPage = () => {\r\n        global.wsSend({type: this.homeRequest.type});\r\n    }\r\n\r\n    getHome = (content) => {\r\n        this.setState({list: content.list, history: content.history, user: content.username, loading: false});\r\n    }\r\n\r\n    onNotification = (content) => {\r\n        this.requestPage();\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        removeWsListener(this.homeRequest.reqId);\r\n        removeWsListener(this.notificationListener.notId);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading)\r\n            return <LoadingPage loading={true}/>;\r\n        return (\r\n            <div>\r\n                <h1>Welcome {this.state.user}</h1>\r\n                {this.state.list.map((match, i) => (\r\n                    <div key={i}><ShowMatchLink {...match} ended={false} /></div>\r\n                ))}\r\n                <hr />\r\n                <h2>History</h2>\r\n                {this.state.history.map((match, i) => (\r\n                    <div key={i}><ShowMatchLink {...match} ended={true} /></div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ShowMatchLink(props){\r\n    return(\r\n        <Link to={\"/game/\" + props.id} className=\"lobby-link\">\r\n            {props.ended ? <EndedMatchLine {...props} /> : <InMatchLine {...props} />}\r\n        </Link>\r\n    );\r\n}\r\n\r\nfunction InMatchLine(props){\r\n    return(\r\n        <div className=\"lobby-box\">\r\n            <p>vs <span>{props.vs.username}</span><span>({props.vs.category})</span>\r\n            {props.turn ? <b>Your turn</b> : null}<TimerDisplay time={props.time} updateTime={(new Date()).getTime()} /></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction EndedMatchLine(props){\r\n    return(\r\n        <div className=\"lobby-box\">\r\n            <p>vs <span>{props.vs}</span><span>{props.result}</span></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from \"react\";\r\nimport { LoadingPage, addWsListener, removeWsListener } from \"./utils\"\r\n\r\nclass AccountPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.pageRequest = {type: \"account-page\", f: this.getPageInfo, reqId: null};\r\n\r\n        this.state = {\r\n            user: {},\r\n            loading: true\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.pageRequest.reqId = addWsListener(this.pageRequest);\r\n        global.wsSend({type: this.pageRequest.type});\r\n    }\r\n\r\n    getPageInfo = (content) => {\r\n        this.setState({user: content, loading: false});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        removeWsListener(this.pageRequest.reqId)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading)\r\n            return <LoadingPage loading={true}/>;\r\n        const user = this.state.user;\r\n        \r\n        return (\r\n            <div>\r\n                <h1><UserEditField field=\"username\" value={user.username} btnClass=\"user\" /></h1>\r\n                <h2>Rank: {user.category} ({user.rank})</h2>\r\n                Email: <UserEditField field=\"email\" value={user.email} />\r\n                {this.state.user.google ? <GoogleIcon /> : <PasswordChange />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction GoogleIcon(props) {\r\n    return (\r\n        <p className=\"with-icon\">\r\n            <img className=\"inline\" width=\"10%\" src={global.imgs + \"google_account.png\"} alt=\"google icon\"></img>\r\n            Google Account\r\n        </p>\r\n    );\r\n}\r\n\r\nclass UserEditField extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.editRequest = {type: \"account-edit\", f: this.getError, reqId: null};\r\n\r\n        this.state = {\r\n            onEdit: false,\r\n            text: \"\",\r\n            error: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editRequest.reqId = addWsListener(this.editRequest);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        removeWsListener(this.editRequest.reqId);\r\n    }\r\n\r\n    getError = (content) => {\r\n        if (content.field === this.props.field)\r\n            if (\"error\" in content)\r\n                this.setState({error: content.error});\r\n            else\r\n                this.setState({onEdit: false, error: null});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const onEdit = !this.state.onEdit;\r\n        if (onEdit)\r\n            this.setState({text: this.props.value});\r\n\r\n        if (!onEdit) {\r\n            global.wsSend({\r\n                type: this.editRequest.type,\r\n                field: this.props.field,\r\n                value: this.state.text\r\n            });\r\n        } else \r\n            this.setState({onEdit: onEdit});\r\n    }\r\n\r\n    render() {\r\n        let value = this.props.value;\r\n        let btnText = this.props.value ? \"change \" : \"add \";\r\n        btnText += this.props.field;\r\n        if (this.state.onEdit){\r\n            value = <input type=\"text\" value={this.state.text} style={{width: 3+this.state.text.length + \"ch\"}}\r\n                    onChange={(e) => this.setState({text: e.target.value})} />;\r\n            btnText = \"enter\";\r\n        }\r\n\r\n        return (\r\n            <form className=\"inline\" onSubmit={this.handleSubmit}>\r\n                \r\n                {value}\r\n                <button type=\"submit\" className={\"edit-btn \"+this.props.btnClass}>{btnText}</button>\r\n                <div className={this.state.error ? \"form-msg red\" : \"hidden\"}>{this.state.error}</div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nclass PasswordChange extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.pswRequest = {type: \"account-psw\", f: this.getResponse, reqId: null};\r\n\r\n        this.state = {\r\n            onEdit: false,\r\n            response: null,\r\n            error: false,\r\n            textOld: \"\",\r\n            textNew1: \"\",\r\n            textNew2: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.pswRequest.reqId = addWsListener(this.pswRequest);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        removeWsListener(this.pswRequest.reqId);\r\n    }\r\n\r\n    getResponse = (content) => {\r\n        if (\"error\" in content)\r\n            this.setState({response: content.error, error: true});\r\n        else {\r\n            setTimeout(() => window.location.replace(\"http://\"+window.location.host) , 1000);\r\n            this.setState({\r\n                onEdit: false, error: false,\r\n                response: \"Your password has been successfully changed\"\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const onEdit = !this.state.onEdit;\r\n        \r\n        // Send request if at least one field is not empty\r\n        if (!onEdit && (this.state.textOld || this.state.textNew1 || this.state.textNew2)) {\r\n            global.wsSend({\r\n                type: this.pswRequest.type,\r\n                old: this.state.textOld,\r\n                new1: this.state.textNew1,\r\n                new2: this.state.textNew2\r\n            });\r\n        } else \r\n            this.setState({onEdit: onEdit});\r\n\r\n        this.setState({textOld: \"\", textNew1: \"\", textNew2: \"\", error: false, response: null});\r\n    }\r\n\r\n    render() {\r\n        const btnText = this.state.onEdit ? \"enter\" : \"change password\";\r\n\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <button type=\"submit\">{btnText}</button>\r\n                <div className={this.state.response ? \"form-msg \" + (this.state.error ? \"red\" : \"green\") : \"hidden\"}>{this.state.response}</div>\r\n                <table className={this.state.onEdit ? \"\" : \"hidden\"}>\r\n                    <tbody>\r\n                    <tr><td>Old password: </td><td><input type=\"password\" name=\"textOld\" value={this.state.textOld} onChange={this.handleChange} /></td></tr>\r\n                    <tr><td>New password: </td><td><input type=\"password\" name=\"textNew1\" value={this.state.textNew1} onChange={this.handleChange} /></td></tr>\r\n                    <tr><td>Confirm password: </td><td><input type=\"password\" name=\"textNew2\" value={this.state.textNew2} onChange={this.handleChange} /></td></tr>\r\n                    <tr><td colSpan=\"2\">You will be redirect to login after a successful change</td></tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountPage;","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { LoadingPage, addWsListener, removeWsListener, PieceImg, displayTime, TimerDisplay } from \"./utils\"\r\n\r\nfunction GamePage(){\r\n    let { id } = useParams()\r\n    return <Game id={id} />\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.notificationListener = {type: \"notify\", f: this.onNotification, notId: null}\r\n        this.gameRequest = {type: \"game-page\", f: this.getGame, reqId: null};\r\n        this.id = parseInt(this.props.id)\r\n\r\n        this.state = {\r\n            game: null,\r\n            loading: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.gameRequest.reqId = addWsListener(this.gameRequest);\r\n        this.notificationListener.notId = addWsListener(this.notificationListener);\r\n        this.requestPage();\r\n    }\r\n\r\n    requestPage = () => {\r\n        global.wsSend({type: this.gameRequest.type, id: this.id});\r\n    }\r\n\r\n    getGame = (content) => {\r\n        if (content.id === this.id)\r\n            this.setState({game: content, loading: false});\r\n    }\r\n\r\n    onNotification = (content) => {\r\n        if (content.id === this.id)\r\n            this.requestPage();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        removeWsListener(this.gameRequest.reqId);\r\n        removeWsListener(this.notificationListener.notId);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading)\r\n            return <LoadingPage loading={true}/>;\r\n        const game = this.state.game;\r\n        if (\"error\" in game)\r\n            return <p>{game.error}</p>;\r\n        if (\"result\"in game)\r\n            return <EndedGame {...game}/>;\r\n        else\r\n            return <InGame {...game}/>;\r\n    }\r\n}\r\n\r\nfunction EndedGame(props){\r\n    let msgLines = {white: \"\", black: \"\"};\r\n    if (props.match.result === \"White\") {\r\n        msgLines = {white: \"Winner\", black: \"Loser\"};\r\n    } else if (props.match.result === \"Black\")\r\n        msgLines = {white: \"Loser\", black: \"Winner\"};\r\n    \r\n    return(\r\n        <div>\r\n        <div className='game-container'>\r\n            <UserResult user={props.match.black} result={msgLines.black} piece=\"k\" turn={!props.match.whiteTurn}/>\r\n            <ChessBoard board={props.board} moves={{}} id={props.id} whiteTurn={false}/>\r\n            <UserResult user={props.match.white} result={msgLines.white} piece=\"K\" turn={props.match.whiteTurn}/>\r\n        </div>\r\n        <MovesList pgn={props.match.pgn}/>\r\n        <ResultReason result={props.result} reason={props.match.reason} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UserResult(props) {\r\n    let className = \"result-line\"\r\n    if (props.result === \"Winner\")\r\n        className += \" zooming\"\r\n    return(\r\n        <div>\r\n            <UserLine user={props.user} piece={props.piece} turn={false}/>\r\n            <p className={className}>{props.result}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ResultReason(props) {\r\n    return(\r\n        <div className=\"moves-list\">\r\n            <h2>{props.result}</h2>\r\n            <h4>The match ended because of <b>{props.reason}</b></h4>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction InGame(props){\r\n    return(\r\n        <div>\r\n            <div className='game-container'>\r\n                <UserTime user={props.match.black} time={props.match.time.black} piece=\"k\" turn={!props.match.whiteTurn}/>\r\n                <ChessBoard board={props.board} moves={props.moves} id={props.id} whiteTurn={props.match.whiteTurn}/>\r\n                <UserTime user={props.match.white} time={props.match.time.white} piece=\"K\" turn={props.match.whiteTurn}/>\r\n                <ChessButtons id={props.id} claim={props.claim}/>\r\n            </div>\r\n            <MovesList pgn={props.match.pgn}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UserTime(props) {\r\n    return(\r\n        <div>\r\n            <UserLine user={props.user} piece={props.piece} turn={props.turn}/>\r\n            <p className=\"user-time\">{props.turn ? <TimerDisplay time={props.time} /> : displayTime(props.time)}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction UserLine(props){\r\n    return(\r\n        <p className=\"user-line\">\r\n            <PieceImg className={props.turn ? \"jumping\" : \"\"} piece={props.piece}/>\r\n            <span>{props.user.username}</span>\r\n            <span>({props.user.category})</span>\r\n        </p>\r\n    );\r\n}\r\n\r\nfunction MovesList(props){\r\n    return(\r\n        <div className=\"moves-list\">\r\n            <h3>History</h3>\r\n            <div>\r\n                {props.pgn.map((turn, i) => <h5 key={i}>{turn}</h5>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ChessBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected : null,\r\n            promotion : null\r\n        };\r\n\r\n        this.options = [ \"q\", \"b\", \"n\", \"r\"]\r\n        this.columns = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\r\n    }\r\n\r\n    handleClick = (id) => {\r\n        if (this.state.selected && id in this.props.moves[this.state.selected]) {\r\n            if (this.props.moves[this.state.selected][id].length){\r\n                this.setState({promotion: id});\r\n            }\r\n            else {\r\n                global.wsSend({type: \"game-move\", move: this.state.selected + id, id: this.props.id});\r\n                this.setState({selected: null});    \r\n            }\r\n        }\r\n        else\r\n            this.setState({selected: id});    \r\n    }\r\n\r\n    promotionClick = (el) => {\r\n        if (el) \r\n            global.wsSend({type: \"game-move\", move: this.state.selected + this.state.promotion + el, id: this.props.id});\r\n        this.setState({selected: null, promotion: null});\r\n    }\r\n\r\n    buttonRender = (column, row, piece) => {\r\n        const id = column + row;\r\n        let enabled = (id in this.props.moves) ? true : false;\r\n        let className = \"\";\r\n\r\n        if (this.state.selected){\r\n            if (id in this.props.moves[this.state.selected]){\r\n                className = \"target\";\r\n                enabled = true;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <td key={id}>\r\n                <button id={id} name={id} disabled={!enabled} className={className} onClick={() => this.handleClick(id)}><PieceImg piece={piece}/> </button>\r\n            </td>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"board\">\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>\r\n                                {this.state.promotion ? <OnPromotion options={this.options} onClick={this.promotionClick} whiteColor={this.props.whiteTurn}/> : null}  \r\n                            </th>\r\n                            {this.columns.map((c) => <th key={c}>{c}</th>)}\r\n                        </tr>\r\n                        {this.props.board.split('/').map((line, row, obj, offset=0) => (\r\n                            <tr key={row}>\r\n                                <th>{8 - row}</th>\r\n                                {line.split('').map((piece, column) => {\r\n                                    const n = parseInt(piece);\r\n                                    if (n){\r\n                                        let blankSpaces = [];\r\n                                        for(let i=0; i<n; i++, offset++){\r\n                                            blankSpaces.push(this.buttonRender(this.columns[column+offset], 8 - row, \"empty\"));\r\n                                        }\r\n                                        offset--;\r\n                                        return blankSpaces;\r\n                                    } else                                        \r\n                                        return this.buttonRender(this.columns[column+offset], 8 - row, piece);\r\n                                })}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction ChessButtons(props){\r\n    return(\r\n        <div style={{clear:\"both\"}}>\r\n            <button disabled={!props.claim} onClick={() => global.wsSend({type: \"game-claim\", id: props.id})}>Claim Draw</button>\r\n            <button onClick={() => global.wsSend({type: \"game-resign\", id: props.id})}>Resign</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass OnPromotion extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected : props.options[0],\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onClick(this.state.selected);\r\n    }\r\n\r\n    render(){\r\n    return(\r\n            <div className=\"promotion\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.props.options.map((piece, i) => (\r\n                        <label key={i}>\r\n                            <PieceImg piece={this.props.whiteColor ? piece.toUpperCase() : piece}/>\r\n                            <input type=\"radio\" name=\"promotion\"\r\n                                value={piece}\r\n                                checked={this.state.selected === piece}\r\n                                onChange={(e) => this.setState({selected: e.target.value})}\r\n                            />\r\n                        </label>\r\n                    ))}\r\n                    <br />\r\n                    <input className=\"button\" type=\"submit\" value=\"confirm\" />\r\n                    <input className=\"button\" type=\"button\" value=\"cancel\" onClick={() => this.props.onClick(null) } />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GamePage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Router.js';\nimport \"./config\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n","\r\nglobal.static = \"/static/\";\r\nglobal.imgs = global.static + \"imgs/\";\r\nglobal.sprites = global.static + \"sprites/\";\r\n\r\n// WebSocket\r\nglobal.ws = null;\r\n\r\n// Array of function to call on WebSocket connect/disconnect\r\nglobal.wsOnStateChange = [];\r\n\r\n// Array of function to call on WebSocket message, form of\r\n// id: { type: \"\", f: function }\r\nglobal.wsOnMessage = new Map();\r\n\r\nlet timeout = 250;\r\nconnect();\r\n\r\nfunction changeWS(ws) {\r\n    global.ws = ws;\r\n    global.wsOnStateChange.forEach((f) => f());\r\n    if (ws)\r\n        send_buffer();\r\n}\r\n\r\nlet buffer = [];\r\n\r\nglobal.wsSend = (obj) => {\r\n    if (global.ws)\r\n        global.ws.send(JSON.stringify(obj));\r\n    else \r\n        buffer.push(obj);\r\n}\r\n\r\nfunction send_buffer() {\r\n    while (buffer.length > 0) {\r\n        const obj = buffer.pop();\r\n        global.wsSend(obj);\r\n    }\r\n}\r\n\r\nfunction connect() {\r\n    var ws = new WebSocket(\"ws://\"+ window.location.host +\"/ws\");\r\n    var connectInterval;\r\n\r\n    ws.onopen = (e) => {\r\n        console.log(\"WebSocket connect\")\r\n        timeout = 250;\r\n        clearTimeout(connectInterval);\r\n        changeWS(ws);\r\n    };\r\n\r\n    ws.onclose = (e) => {\r\n        console.log(\"WebSocket disconnect, error \" + e.reason);\r\n        changeWS(null);\r\n\r\n        if (timeout < 5000)\r\n            timeout *= 2;\r\n        connectInterval = setTimeout(check, timeout);\r\n    };\r\n\r\n    // On production deactivate logging errors for security reasons\r\n    ws.onerror = (e) => {\r\n        //console.error(\"WebSocket error: \" + e.message);\r\n        ws.close();\r\n    }\r\n\r\n    ws.onmessage = (e) => {\r\n        const message = JSON.parse(e.data);\r\n        global.wsOnMessage.forEach((listener, key) => {\r\n            if (listener.type === message.type)\r\n                listener.f(message);\r\n        });\r\n    }\r\n\r\n}\r\n\r\nfunction check() {\r\n    let ws = global.ws;\r\n    if (!ws || (ws.readyState === WebSocket.CLOSED))\r\n        connect();\r\n}\r\n\r\n"],"sourceRoot":""}